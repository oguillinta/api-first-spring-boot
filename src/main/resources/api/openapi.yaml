openapi: 3.0.0
info:
  title: API Loan Evaluation v1
  version: 1.1.3
  description: API to manage customers and loans evaluation
servers:
  - url: http://localhost:9091

tags:
  - name: Customers
    description: Operations related to customers management
  - name: LoanApplications
    description: Operations related to loan management

paths:
  /customers:
    get:
      tags:
        - Customers
      summary: Get all customers
      operationId: getAllCustomers
      description: Return a list with all customers.
      responses:
        "200":
          description: List of customers retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerResponse"
        "403":
          description: Insufficient permissions to get customer
        "500":
          description: Error when getting customers
    post:
      tags:
        - Customers
      summary: Create customer
      operationId: createCustomer
      description: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerRequest"
      responses:
        "201":
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerResponse"
        "403":
          description: Insufficient permissions to get customer
        "500":
          description: Error when creating customer

  /customers/{customerId}:
    get:
      tags:
        - Customers
      summary: Get customer by id
      operationId: getCustomerById
      description: Return a customer based on a given id
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The customer id
      responses:
        "200":
          description: Customer found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerResponse"
        "403":
          description: Insufficient permissions to get customer
        "404":
          description: No customer found
        "500":
          description: Error when retrieving customer

  /customers/{customerId}/contact:
    put:
      tags:
        - Customers
      summary: Update customer contact
      operationId: updateCustomerContact
      description: Update the contact information of a customer.
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Customer ID to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactInformationRequest"
      responses:
        "200":
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerResponse"
        "403":
          description: Insufficient permissions to update customer
        "404":
          description: Customer not found
        "500":
          description: Error when updating customer

  /customers/{customerId}/financial-profile:
    put:
      tags:
        - Customers
      summary: Update customer financial profile
      operationId: updateCustomerFinancialProfile
      description: Update the financial profile of a customer.
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Customer ID to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinancialProfileRequest"
      responses:
        "204":
          description: Customer financial profile updated successfully
        "403":
          description: Insufficient permissions to update customer
        "404":
          description: Customer not found
        "500":
          description: Error when updating the customer financial profile

  /customers/{customerId}/loan-applications:
    get:
      tags:
        - Customers
      summary: Get loan applications by customer id
      operationId: getLoanApplicationsByCustomer
      description: Return a list of loan applications for a given customer id
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The customer id
      responses:
        "200":
          description: Loan applications found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoanApplicationResponse"
        "403":
          description: Insufficient permissions to get loan applications
        "404":
          description: Customer not found
        "500":
          description: Error when retrieving loan applications

  /loan-applications:
    get:
      tags:
        - LoanApplications
      summary: Get loan applications by a given status
      operationId: getLoanApplicationsByStatus
      description: Return a list with loan applications filtered by status.
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
          description: Status to filter loan applications by
      responses:
        "200":
          description: A list of loan applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoanApplicationResponse"
        "403":
          description: Insufficient permissions to get loan applications
        "500":
          description: Error when getting loan applications for the given criteria
    post:
      tags:
        - LoanApplications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanApplicationRequest"
      summary: Submit loan application
      operationId: submitLoanApplication
      description: Submit a new loan application
      responses:
        "201":
          description: Loan application created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoanApplicationResponse"
        "403":
          description: Insufficient permissions to submit the loan application
        "500":
          description: Error when creating loan application

  /loan-applications/{loanApplicationId}/risk-assessment:
    put:
      tags:
        - LoanApplications
      summary: Perform risk assessment
      operationId: performRiskAssessment
      description: Perform a risk assessment on a loan application
      parameters:
        - name: loanApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Loan application id to perform risk assessment on
      responses:
        "204":
          description: Risk assessment completed successfully
        "403":
          description: Insufficient permissions to perform the risk assessment
        "404":
          description: Loan application not found
        "500":
          description: Error when retrieving loan application

  /loan-applications/{loanApplicationId}/decision:
    put:
      tags:
        - LoanApplications
      summary: Perform loan application decision
      operationId: decideOnLoanApplication
      description: Decide on loan application
      parameters:
        - name: loanApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Loan application id to perform decision on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DecideOnLoanApplicationRequest"
      responses:
        "204":
          description: Decision applied successfully
        "403":
          description: Insufficient permissions to decide on loan application
        "404":
          description: Loan application not found
        "500":
          description: Error when decision was applied

components:
  schemas:
    DecisionTypeRequest:
      type: string
      enum:
        - APPROVED
        - REJECTED
    DecisionType:
      type: string
      enum:
        - APPROVED
        - REJECTED
    Money:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
          format: decimal
        currency:
          type: string
          format: "USD"
    MoneyRequest:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
          format: decimal
          description: "Monetary amount"
        currency:
          type: string
          description: "Currency code, e.g., USD"
          enum:
            - USD
    CustomerResponse:
      type: object
      properties:
        id:
          type: string
          format: UUID
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        monthlyIncome:
          type: number
          format: decimal
        monthlyExpenses:
          type: number
          format: decimal
        existingDebt:
          type: number
          format: decimal
        yearsOfEmployment:
          type: integer
        debtToIncomeRatio:
          type: number
          format: decimal
    CustomerRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        id:
          type: string
          format: UUID
          description: ID of the customer
        firstName:
          type: string
          description: Name of the customer
          minLength: 5
          maxLength: 100
        lastName:
          type: string
          description: Lastname of the customer
          minLength: 5
          maxLength: 100
        email:
          type: string
          description: Email of the customer
          minLength: 10
          maxLength: 50
          pattern: "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"
        phoneNumber:
          type: string
          description: Phone number of the customer
          minLength: 9
          maxLength: 9
        street:
          type: string
          description: Street where the customer lives in
          minLength: 10
          maxLength: 200
        city:
          type: string
          description: City where the customer lives in
          minLength: 5
          maxLength: 30
        state:
          type: string
          description: State where the customer lives in
          minLength: 5
          maxLength: 30
        zipCode:
          type: string
          description: Zip Code which belongs to the customer city
          minLength: 3
          maxLength: 15
        country:
          type: string
          description: Country where the customer lives in
          minLength: 5
          maxLength: 50
        monthlyIncome:
          type: number
          format: decimal
          minimum: 500
          maximum: 1000000
          description: Monthly income of the customer
        monthlyExpenses:
          type: number
          format: decimal
          description: Monthly expenses of the customer
          minimum: 0
          maximum: 500000
        existingDebt:
          type: number
          format: decimal
          minimum: 0
          maximum: 10000000
          description: Existing debt of the customer
        yearsOfEmployment:
          type: integer
          description: Years of employment of the customer
          minimum: 0
          maximum: 50
        debtToIncomeRatio:
          type: number
          format: decimal
          description: Debt to income ratio of the customer
    ContactInformationRequest:
      type: object
      properties:
        email:
          type: string
          description: Email of the customer
          minLength: 10
          maxLength: 100
          pattern: "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"
        phoneNumber:
          type: string
          description: Phone number of the customer
          minLength: 9
          maxLength: 9
        street:
          type: string
          description: Street where the customer lives in
          minLength: 10
          maxLength: 100
        city:
          type: string
          description: City where the customer lives
          minLength: 5
          maxLength: 50
        state:
          type: string
          description: State where the customer lives in
          minLength: 5
          maxLength: 50
        zipCode:
          type: string
          minLength: 3
          maxLength: 15
          description: Zip Code which belongs to the customer city
        country:
          type: string
          minLength: 5
          maxLength: 50
          description: Country where the customer lives
    DecideOnLoanApplicationRequest:
      type: object
      required:
        - decisionType
        - decidedBy
      properties:
        decisionType:
          $ref: "#/components/schemas/DecisionTypeRequest"
        notes:
          type: string
          description: "Decision notes explaining the reasoning"
          minLength: 5
          maxLength: 1000
        decidedBy:
          type: string
          description: "Name or ID of the person who makes the decision"
          minLength: 2
          maxLength: 100
        approvedAmount:
          $ref: "#/components/schemas/MoneyRequest"
    LoanApplicationRequest:
      type: object
      required:
        - customerId
        - requestedAmount
        - loanType
        - purpose
      properties:
        customerId:
          type: string
          format: UUID
          description: "UUID of the customer applying for the loan"
        requestedAmount:
          type: number
          description: "Loan amount requested by the customer"
        loanType:
          type: string
          description: Type of the loan being requested
        purpose:
          type: string
          description: Purpose of the loan
          minLength: 10
          maxLength: 500

    FinancialProfileRequest:
      type: object
      required:
        - monthlyIncome
        - monthlyExpenses
        - existingDebt
        - yearsOfEmployment
        - debtToIncomeRatio
      properties:
        monthlyIncome:
          type: number
          format: decimal
          description: "Monthly income of the customer"
        monthlyExpenses:
          type: number
          format: decimal
          description: "Monthly expenses of the customer"
        existingDebt:
          type: number
          format: decimal
          description: "Existing debt of the customer"
        yearsOfEmployment:
          type: integer
          description: "Years of employment of the customer"
        debtToIncomeRatio:
          type: number
          format: decimal
          description: Debt to income ratio of the customer

    LoanApplicationResponse:
      type: object
      properties:
        id:
          type: string
          format: UUID
        customerId:
          type: string
          format: UUID
        requestedAmount:
          type: number
        loanType:
          type: string
        purpose:
          type: string
        status:
          type: string
        submittedAt:
          type: string
